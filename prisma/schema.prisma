generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model countries {
  id       Int     @id @default(autoincrement())
  country  String  @unique @db.VarChar(255)
  iso_code String  @unique @db.Char(2)
  posts    posts[]
}

model posts {
  id         Int       @id @default(autoincrement())
  slug       String    @unique @db.VarChar(255)
  title      String    @db.VarChar(255)
  content    String
  posted_at  DateTime  @db.Timestamp(6)
  user_id    Int
  country_id Int
  trip_id    Int?
  countries  countries @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_countries")
  trips      trips?    @relation(fields: [trip_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trips")
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users")
}

model roles {
  id        Int     @id @default(autoincrement())
  user_role String  @unique @db.VarChar(50)
  users     users[]
}

model trips {
  id        Int      @id @default(autoincrement())
  trip      String   @unique @db.VarChar(255)
  date_from DateTime @db.Timestamp(6)
  date_to   DateTime @db.Timestamp(6)
  posts     posts[]
}

model users {
  id              Int      @id @default(autoincrement())
  username        String   @unique @db.VarChar(255)
  email           String?  @unique @db.VarChar(255)
  password_hash   String   @db.VarChar(255)
  date_registered DateTime @db.Timestamp(6)
  role_id         Int
  posts           posts[]
  roles           roles    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_roles")
}
